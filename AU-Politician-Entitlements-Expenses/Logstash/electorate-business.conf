input {
    stdin {
        type => "business_trip"
    }
}

filter {
    csv {
        columns => [ "politician","url","datefrom","dateto","details","location","rate","nights","key","amount","spouse","note","lat","lon","electorate","state","party","partygroup","house","withinelectorate" ]
        remove_field => [ "key" ]
    }
    date {
        match =>  [ "datefrom", "dd-MMM-YY" ]
        target => "datefrom"
        timezone => "Australia/NSW"
    }
    date {
        match =>  [ "dateto", "dd-MMM-YY" ]
        target => "dateto"
        timezone => "Australia/NSW"
    }
    mutate {
        convert => {
            "nights" => "integer"
            "withinelectorate" => "boolean"
            "lat" => "float"
            "lon" => "float"
        }
        add_field => {
            "record_timestamp" => "%{datefrom}"
            "[geoip][location]" => [ "%{lon}", "%{lat}" ]
            "[geoip][latitude]" => "%{lat}"
            "[geoip][longitude]" => "%{lon}"
        }
        # "geoip.location" => [ "%{lon}", "%{lat}" ]
        rename => { "location" => "destination" }
        remove_field => [ "lat", "lon" ]
    }
    grok {
        match => {
            "rate" => "\$%{NUMBER:rate:float}"
        }
        overwrite => [ "rate" ]
    }
    grok {
        match => {
            "amount" => "\$%{NUMBER:amount:float}"
        }
        overwrite => [ "amount" ]
    }
    grok {
        match => { "politician" => "%{WORD:last_name} %{WORD:first_name}" }
    }
}

output {
    stdout {
        codec => "rubydebug"
    }
    elasticsearch {
        index => "entitlements-test"
        host => "localhost"
        cluster => "es"
        manage_template => "false"
    }
}
